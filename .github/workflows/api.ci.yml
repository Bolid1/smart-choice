name: API CI

on:
  push:
  pull_request:

defaults:
  run:
    working-directory: api

env:
  COMPOSER_ALLOW_SUPERUSER: '1' # https://getcomposer.org/doc/03-cli.md#composer-allow-superuser
  COMPOSER_INSTALLER_COMMIT: fb22b78362d31c0d2bf516d1f8cdfd2745caa431
  COVERAGE: '0'
  EXT_PCOV_VERSION: '1.0.6'

jobs:
  php-cs-fixer:
    name: PHP-CS-Fixer (PHP ${{ matrix.php }})
    runs-on: ubuntu-latest
    container:
      image: php:${{ matrix.php }}-alpine
      options: >-
        --tmpfs /tmp:exec
        --tmpfs /var/tmp:exec
    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: false
    timeout-minutes: 5
    env:
      PHP_CS_FIXER_FUTURE_MODE: '1'
      PHP_CS_FIXER_VERSION: '^2.14'
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install system packages
        run: |
          apk add \
            unzip \
      - name: Disable PHP memory limit
        run: echo 'memory_limit=-1' >> /usr/local/etc/php/php.ini
      - name: Install Composer
        run: wget -qO - https://raw.githubusercontent.com/composer/getcomposer.org/$COMPOSER_INSTALLER_COMMIT/web/installer | php -- --install-dir=/usr/local/bin --filename=composer --quiet
      - name: Cache Composer packages
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache
          key: composer-php${{ matrix.php }}-php-cs-fixer-${{ github.sha }}
          restore-keys: |
            composer-php${{ matrix.php }}-php-cs-fixer-
            composer-php${{ matrix.php }}-
            composer-
        continue-on-error: true
      - name: Install Symfony Flex
        run: |
          composer global require --prefer-dist --no-progress --no-suggest --ansi \
            symfony/flex
      - name: Install PHP-CS-Fixer
        run: |
          composer global require --prefer-dist --no-progress --no-suggest --ansi \
            friendsofphp/php-cs-fixer:"${PHP_CS_FIXER_VERSION}"
      - name: Cache PHP-CS-Fixer results
        uses: actions/cache@v1
        with:
          path: /var/cache/php-cs-fixer
          key: php-cs-fixer-php${{ matrix.php }}-${{ github.sha }}
          restore-keys: |
            php-cs-fixer-php${{ matrix.php }}-
            php-cs-fixer-
        continue-on-error: true
      - name: Run PHP-CS-Fixer fix
        run: |
          export PATH="$PATH:$HOME/.composer/vendor/bin"
          mkdir -p /var/cache/php-cs-fixer
          php-cs-fixer fix --dry-run --diff --ansi

  phpunit-postgresql:
    name: PHPUnit (PHP ${{ matrix.php }}) (PostgreSQL)
    runs-on: ubuntu-latest
    container:
      image: php:${{ matrix.php }}-alpine
      options: >-
        --tmpfs /tmp:exec
        --tmpfs /var/tmp:exec
    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_DB: api_test
          POSTGRES_PASSWORD: hk7dFAByeQVVxpLtmZ6GVUzP
          POSTGRES_USER: api
        options: >-
          --mount type=tmpfs,destination=/var/lib/postgresql/data
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: false
    timeout-minutes: 20
    env:
      APP_ENV: postgres
      DATABASE_URL: postgres://api:hk7dFAByeQVVxpLtmZ6GVUzP@postgres/api_test
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install system packages
        run: |
          apk add \
            unzip \
      - name: Install PHP extensions
        run: |
          apk add \
            $PHPIZE_DEPS \
            postgresql-dev \
          ;
          docker-php-ext-install -j$(nproc) \
            pdo_pgsql \
          ;
      - name: Disable PHP memory limit
        run: echo 'memory_limit=-1' >> /usr/local/etc/php/php.ini
      - name: Install Composer
        run: wget -qO - https://raw.githubusercontent.com/composer/getcomposer.org/$COMPOSER_INSTALLER_COMMIT/web/installer | php -- --install-dir=/usr/local/bin --filename=composer --quiet
      - name: Cache Composer packages
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache
          key: composer-php${{ matrix.php }}-${{ github.sha }}
          restore-keys: |
            composer-php${{ matrix.php }}-
            composer-
        continue-on-error: true
      - name: Install Symfony Flex
        run: |
          composer global require --prefer-dist --no-progress --no-suggest --ansi \
            symfony/flex
      - name: Update project dependencies
        run: |
          mkdir -p /tmp/api/core/vendor
          ln -s /tmp/api/core/vendor vendor
          composer update --no-progress --no-suggest --ansi
      - name: Run PHPUnit tests
        run: |
          mkdir -p build/logs/phpunit
          bin/phpunit --log-junit build/logs/phpunit/junit.xml --colors=always
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: phpunit-logs-php${{ matrix.php }}-postgresql
          path: build/logs/phpunit
        continue-on-error: true

  phpunit-symfony-next:
    name: PHPUnit (PHP ${{ matrix.php }}) (Symfony ${{ matrix.symfony }})
    runs-on: ubuntu-latest
    container:
      image: php:${{ matrix.php }}-alpine
      options: >-
        --tmpfs /tmp:exec
        --tmpfs /var/tmp:exec
    strategy:
      matrix:
        php:
          - '7.4'
        symfony:
          - '5.1'
      fail-fast: false
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install system packages
        run: |
          apk add \
            jq \
            moreutils \
            unzip \
      - name: Disable PHP memory limit
        run: echo 'memory_limit=-1' >> /usr/local/etc/php/php.ini
      - name: Install Composer
        run: wget -qO - https://raw.githubusercontent.com/composer/getcomposer.org/$COMPOSER_INSTALLER_COMMIT/web/installer | php -- --install-dir=/usr/local/bin --filename=composer --quiet
      - name: Cache Composer packages
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache
          key: composer-php${{ matrix.php }}-symfony${{ matrix.symfony }}-${{ github.sha }}
          restore-keys: |
            composer-php${{ matrix.php }}-symfony${{ matrix.symfony }}-
            composer-php${{ matrix.php }}-
            composer-
        continue-on-error: true
      - name: Install Symfony Flex
        run: |
          composer global require --prefer-dist --no-progress --no-suggest --ansi \
            symfony/flex
      - name: Allow unstable project dependencies
        run: |
          jq '. + {"minimum-stability": "dev"}' composer.json | sponge composer.json
      - name: Update project dependencies
        run: |
          mkdir -p /tmp/api/core/vendor
          ln -s /tmp/api/core/vendor vendor
          composer update --no-progress --no-suggest --ansi
      - name: Flag held back Symfony packages
        env:
          symfony_version: ${{ matrix.symfony }}
        run: |
          version_pattern=$symfony_version.x-dev
          if [ "${symfony_version%.4}" != "$symfony_version" ]; then
            current_major=${symfony_version%.4}
            next_major=$((current_major + 1))
            version_pattern=$version_pattern'|'$next_major.0.x-dev'|'dev-master
          fi
          version_pattern=$(echo "$version_pattern" | sed -r 's/\./\\./g')
          symfony_packages=$(composer show symfony/* | tr -s ' ' '\t' | cut -f1-2 | grep -vE 'polyfill|contracts|mercure')
          ! echo "$symfony_packages" | grep -vE "$version_pattern"
        continue-on-error: true
      - name: Run PHPUnit tests
        run: |
          mkdir -p build/logs/phpunit
          bin/phpunit --log-junit build/logs/phpunit/junit.xml --colors=always
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: phpunit-logs-php${{ matrix.php }}-symfony${{ matrix.symfony }}
          path: build/logs/phpunit
        continue-on-error: true
